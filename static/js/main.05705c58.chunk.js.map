{"version":3,"sources":["App.module.css","input-text.module.css","Images/background.jpg","Images/searchicon.png","input-text.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","placeholder","typeList_int","typeDelay","props","this","_blinker","_animatePlaceholder","_updatePlaceholder","range","min","max","typeSpeed","e","Math","ceil","floor","random","blinker","setInterval","animatePlaceholder","setTimeout","currentPlaceholder","typeList","length","newPlaceholder","i","charAt","setState","animateDelay","typespeed","console","log","element","document","activeElement","ONLYSHOWONFOCUS","ref","r","className","Style","default","type","name","autoComplete","autocomplete","list","maxLength","minLength","pattern","readOnly","readonly","size","spellCheck","spellcheck","onClick","onFocus","onBlur","React","Component","worklist","showSearch","container","background","src","require","alt","onSubmit","preventDefault","togo","form","serialized","elements","field","disabled","n","options","selected","push","encodeURIComponent","value","checked","join","serialize","target","split","window","location","href","input","onHover","floater","searchIcon","credit","style","backgroundColor","color","textDecoration","padding","fontFamily","fontSize","fontWeight","lineHeight","display","borderRadius","rel","title","xmlns","height","width","position","verticalAlign","top","fill","viewBox","d","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05705c58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__YSlgT\",\"background\":\"App_background__1nz0I\",\"credit\":\"App_credit__3LS8w\",\"floater\":\"App_floater__2DKTA\",\"searchIcon\":\"App_searchIcon__mELII\",\"input\":\"App_input__19WVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"input-text_default__3p0zE\"};","module.exports = __webpack_public_path__ + \"static/media/background.2831fb72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/searchicon.c3ae75fd.png\";","import React from 'react';\r\nimport Style from './input-text.module.css';\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nclass App extends React.Component{\r\n  state={\r\n    placeholder : '',\r\n  }\r\n  typeList_int = 0;\r\n  typeDelay = this.props.typeDelay || 2500;\r\n  componentDidMount(){\r\n    this._blinker();\r\n    this._animatePlaceholder();\r\n    this._updatePlaceholder();\r\n  }\r\n  typespeed(){\r\n    var range;\r\n    try{\r\n      range = {\r\n        min : this.props.typeSpeed.min,\r\n        max : this.props.typeSpeed.max,\r\n      }\r\n    }catch(e){\r\n      range = {\r\n        min : 1,\r\n        max : 200,\r\n      }\r\n    }\r\n\r\n    var speed = getRandomInt(range.min, range.max);\r\n    return(speed)\r\n  }\r\n  _blinker(){\r\n    if(!this.props.blinker){return}\r\n    setInterval(()=>{\r\n      this.blinker = !this.blinker;\r\n    },500)\r\n  }\r\n  _animatePlaceholder(){\r\n    // Check if animatePlaceholder is null?\r\n    if(!this.animatePlaceholder){this.animatePlaceholder = ''}\r\n    setTimeout(()=>{\r\n      try{\r\n        var currentPlaceholder = this.props.typeList[this.typeList_int];\r\n        // Check if placeholder is fully typespeed\r\n        if(this.animatePlaceholder == currentPlaceholder){\r\n          setTimeout(()=>{\r\n            this.animatePlaceholder = '';\r\n            this.typeList_int += 1;\r\n            if(this.typeList_int >= this.props.typeList.length){\r\n              this.typeList_int = 0;\r\n            }\r\n            this._animatePlaceholder();\r\n          },this.typeDelay)\r\n        }else{\r\n          // Type our latters of typeList\r\n          var newPlaceholder = '';\r\n          for(var i = 0; i <= this.animatePlaceholder.length; i++){\r\n            newPlaceholder += currentPlaceholder.charAt(i);\r\n          }\r\n          this.animatePlaceholder = newPlaceholder;\r\n          this.setState({\r\n            animateDelay:this.typespeed(),\r\n          })\r\n          this._animatePlaceholder();\r\n        }\r\n      }catch(e){\r\n        console.log(e)\r\n      }\r\n    },this.state.animateDelay)\r\n  }\r\n  _updatePlaceholder(){\r\n    setInterval(()=>{\r\n      if(this.element === document.activeElement || !this.props.ONLYSHOWONFOCUS){\r\n        var placeholder = this.animatePlaceholder;\r\n        if(this.blinker){\r\n          placeholder += '_';\r\n        }\r\n        this.setState({\r\n          placeholder:placeholder,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          placeholder:'',\r\n        })\r\n      }\r\n    },100)\r\n  }\r\n  render(){\r\n    return (\r\n      <input\r\n        ref={(r)=>{this.element = r}}\r\n        className={this.props.className || Style.default}\r\n        type=\"text\"\r\n        name={this.props.name || 'AnimatedSearchbar'}\r\n        autoComplete={this.props.autocomplete || 'AnimatedSearchbar'}\r\n        list={this.props.list || null}//\tThe id of the <datalist> element that contains the optional pre-defined autocomplete options\r\n        maxLength={this.props.maxLength || 99}//\tThe maximum number of characters the input should accept\r\n        minLength={this.props.minLength || 0}//\tThe minimum number of characters long the input can be and still be considered valid\r\n        pattern={this.props.pattern || null}//\tA regular expression the input's contents must match in order to be valid\r\n        placeholder={this.state.placeholder || null}//\tAn exemplar value to display in the input field whenever it is empty\r\n        readOnly={this.props.readonly || false}//\tA Boolean attribute indicating whether or not the contents of the input should be read-only\r\n        size={this.props.size || null}//\tA number indicating how many characters wide the input field should be\r\n        spellCheck={this.props.spellcheck || null}//\tControls whether or not to enable spell checking for the input field, or if the default spell checking configuration should be used\r\n\r\n        onClick={(e)=>{\r\n          try{\r\n            this.props.onClick(e);\r\n          }catch(e){}\r\n        }}\r\n        onFocus={(e)=>{\r\n          try{\r\n            this.props.onFocus(e);\r\n          }catch(e){}\r\n        }}\r\n        onBlur={(e)=>{\r\n          try{\r\n            this.props.onBlur(e);\r\n          }catch(e){}\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport Style from './App.module.css';\n\nimport Searchbar from './input-text.js';\n\nconst worklist = ['Enter your dream location', 'Why not...Tokyo?', 'Melbourne?', 'Sydney?'];\n\nconst serialize = function (form) {\n  // Setup our serialized data\n  var serialized = [];\n  // Loop through each field in the form\n  for (var i = 0; i < form.elements.length; i++) {\n    var field = form.elements[i];\n    // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n    if (!field.name || field.disabled || field.type === 'file' || field.type === 'reset' || field.type === 'submit' || field.type === 'button') continue;\n    // If a multi-select, get all selections\n    if (field.type === 'select-multiple') {\n      for (var n = 0; n < field.options.length; n++) {\n        if (!field.options[n].selected) continue;\n        serialized.push(encodeURIComponent(field.name) + \"=\" + encodeURIComponent(field.options[n].value));\n      }\n    }\n    // Convert field data to a query string\n    else if ((field.type !== 'checkbox' && field.type !== 'radio') || field.checked) {\n      serialized.push(encodeURIComponent(field.name) + \"=\" + encodeURIComponent(field.value));\n    }\n  }\n  return serialized.join('&');\n};\n\n\nclass App extends React.Component{\n  state={\n    showSearch:true,\n  }\n  render(){\n    return (\n      <div className={Style.container}>\n      <img className={Style.background} src={require('./Images/background.jpg')} alt='animated Searchbar'/>\n      <div className={Style.container}>\n      <form className={Style.container} onSubmit={(e)=>{\n        e.preventDefault();\n        var form = e.target;\n        var formData = serialize(form);\n        var togo = formData.split('=')\n        window.location.href = `https://www.google.com/maps/place/${togo[1]}`\n      }}>\n\n      <Searchbar\n      name={'WhereToGo'}\n      className={Style.input}\n      ONLYSHOWONFOCUS={true}\n      blinker={true}\n      minLength={1}\n      maxLength={10}\n      typeList={worklist}\n      typeDelay={3000}\n      typeSpeed={{min:50, max:200}}\n\n      onClick={(e)=>{\n        console.log('onClick');\n      }}\n      onHover={(e)=>{\n        console.log('onHover');\n      }}\n      onFocus={(e)=>{\n        this.setState({\n          showSearch:false\n        })\n      }}\n      onBlur={(e)=>{\n        this.setState({\n          showSearch:true\n        })\n      }}\n      />\n      {\n      this.state.showSearch === true &&\n        <div className={Style.floater}>\n          <img className={Style.searchIcon} src={require('./Images/searchicon.png')} alt='animated Searchbar'/>\n        </div>\n      }\n      </form>\n      </div>\n      <div className={Style.credit}>\n      <a style={{backgroundColor: 'black', color: 'white', textDecoration: 'none', padding: '4px 6px', fontFamily: '-apple-system, BlinkMacSystemFont, \"San Francisco\", \"Helvetica Neue\", Helvetica, Ubuntu, Roboto, Noto, \"Segoe UI\", Arial, sans-serif', fontSize: '12px', fontWeight: 'bold', lineHeight: '1.2', display: 'inline-block', borderRadius: '3px'}} href=\"https://unsplash.com/@seefromthesky?utm_medium=referral&utm_campaign=photographer-credit&utm_content=creditBadge\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Download free do whatever you want high-resolution photos from Ishan @seefromthesky\"><span style={{display: 'inline-block', padding: '2px 3px'}}><svg xmlns=\"http://www.w3.org/2000/svg\" style={{height: '12px', width: 'auto', position: 'relative', verticalAlign: 'middle', top: '-2px', fill: 'white'}} viewBox=\"0 0 32 32\"><title>unsplash-logo</title><path d=\"M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z\" /></svg></span><span style={{display: 'inline-block', padding: '2px 3px'}}>Ishan @seefromthesky</span></a>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}